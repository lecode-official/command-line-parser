//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.5
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from CommandLine.g4 by ANTLR 4.5

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591

namespace System.CommandLine.Parser {
using System;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.5")]
[System.CLSCompliant(false)]
public partial class CommandLineLexer : Lexer {
	public const int
		T__0=1, T__1=2, T__2=3, UnixStyleFlaggedIdentifiers=4, WindowsStyleIdentifier=5, 
		UnixStyleIdentifier=6, AssignmentOperator=7, True=8, False=9, Number=10, 
		Digit=11, String=12, QuotedString=13, WhiteSpaces=14;
	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"T__0", "T__1", "T__2", "UnixStyleFlaggedIdentifiers", "WindowsStyleIdentifier", 
		"UnixStyleIdentifier", "AssignmentOperator", "True", "False", "Number", 
		"Digit", "String", "QuotedString", "WhiteSpaces"
	};


	public CommandLineLexer(ICharStream input)
		: base(input)
	{
		Interpreter = new LexerATNSimulator(this,_ATN);
	}

	private static readonly string[] _LiteralNames = {
		null, "'['", "','", "']'", null, null, null, null, "'true'", "'false'"
	};
	private static readonly string[] _SymbolicNames = {
		null, null, null, null, "UnixStyleFlaggedIdentifiers", "WindowsStyleIdentifier", 
		"UnixStyleIdentifier", "AssignmentOperator", "True", "False", "Number", 
		"Digit", "String", "QuotedString", "WhiteSpaces"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "CommandLine.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return _serializedATN; } }

	public static readonly string _serializedATN =
		"\x3\x430\xD6D1\x8206\xAD2D\x4417\xAEF1\x8D80\xAADD\x2\x10x\b\x1\x4\x2"+
		"\t\x2\x4\x3\t\x3\x4\x4\t\x4\x4\x5\t\x5\x4\x6\t\x6\x4\a\t\a\x4\b\t\b\x4"+
		"\t\t\t\x4\n\t\n\x4\v\t\v\x4\f\t\f\x4\r\t\r\x4\xE\t\xE\x4\xF\t\xF\x3\x2"+
		"\x3\x2\x3\x3\x3\x3\x3\x4\x3\x4\x3\x5\x3\x5\x6\x5(\n\x5\r\x5\xE\x5)\x3"+
		"\x6\x3\x6\x3\x6\x6\x6/\n\x6\r\x6\xE\x6\x30\x3\a\x3\a\x3\a\x3\a\x3\a\x6"+
		"\a\x38\n\a\r\a\xE\a\x39\x3\b\x3\b\x3\t\x3\t\x3\t\x3\t\x3\t\x3\n\x3\n\x3"+
		"\n\x3\n\x3\n\x3\n\x3\v\x6\vJ\n\v\r\v\xE\vK\x3\v\x6\vO\n\v\r\v\xE\vP\x3"+
		"\v\x3\v\a\vU\n\v\f\v\xE\vX\v\v\x3\v\x3\v\x6\v\\\n\v\r\v\xE\v]\x5\v`\n"+
		"\v\x3\f\x3\f\x3\r\x6\r\x65\n\r\r\r\xE\r\x66\x3\xE\x3\xE\a\xEk\n\xE\f\xE"+
		"\xE\xEn\v\xE\x3\xE\x3\xE\x3\xF\x6\xFs\n\xF\r\xF\xE\xFt\x3\xF\x3\xF\x3"+
		"l\x2\x10\x3\x3\x5\x4\a\x5\t\x6\v\a\r\b\xF\t\x11\n\x13\v\x15\f\x17\r\x19"+
		"\xE\x1B\xF\x1D\x10\x3\x2\t\x4\x2\x43\\\x63|\a\x2//\x32;\x43\\\x61\x61"+
		"\x63|\x4\x2<<??\x3\x2\x32;\v\x2\f\f\xF\xF\"\"$$./\x31\x31<<??]_\x6\x2"+
		"\f\f\xF\xF//\x31\x31\x5\x2\v\f\xF\xF\"\"\x83\x2\x3\x3\x2\x2\x2\x2\x5\x3"+
		"\x2\x2\x2\x2\a\x3\x2\x2\x2\x2\t\x3\x2\x2\x2\x2\v\x3\x2\x2\x2\x2\r\x3\x2"+
		"\x2\x2\x2\xF\x3\x2\x2\x2\x2\x11\x3\x2\x2\x2\x2\x13\x3\x2\x2\x2\x2\x15"+
		"\x3\x2\x2\x2\x2\x17\x3\x2\x2\x2\x2\x19\x3\x2\x2\x2\x2\x1B\x3\x2\x2\x2"+
		"\x2\x1D\x3\x2\x2\x2\x3\x1F\x3\x2\x2\x2\x5!\x3\x2\x2\x2\a#\x3\x2\x2\x2"+
		"\t%\x3\x2\x2\x2\v+\x3\x2\x2\x2\r\x32\x3\x2\x2\x2\xF;\x3\x2\x2\x2\x11="+
		"\x3\x2\x2\x2\x13\x42\x3\x2\x2\x2\x15_\x3\x2\x2\x2\x17\x61\x3\x2\x2\x2"+
		"\x19\x64\x3\x2\x2\x2\x1Bh\x3\x2\x2\x2\x1Dr\x3\x2\x2\x2\x1F \a]\x2\x2 "+
		"\x4\x3\x2\x2\x2!\"\a.\x2\x2\"\x6\x3\x2\x2\x2#$\a_\x2\x2$\b\x3\x2\x2\x2"+
		"%\'\a/\x2\x2&(\t\x2\x2\x2\'&\x3\x2\x2\x2()\x3\x2\x2\x2)\'\x3\x2\x2\x2"+
		")*\x3\x2\x2\x2*\n\x3\x2\x2\x2+,\a\x31\x2\x2,.\t\x2\x2\x2-/\t\x3\x2\x2"+
		".-\x3\x2\x2\x2/\x30\x3\x2\x2\x2\x30.\x3\x2\x2\x2\x30\x31\x3\x2\x2\x2\x31"+
		"\f\x3\x2\x2\x2\x32\x33\a/\x2\x2\x33\x34\a/\x2\x2\x34\x35\x3\x2\x2\x2\x35"+
		"\x37\t\x2\x2\x2\x36\x38\t\x3\x2\x2\x37\x36\x3\x2\x2\x2\x38\x39\x3\x2\x2"+
		"\x2\x39\x37\x3\x2\x2\x2\x39:\x3\x2\x2\x2:\xE\x3\x2\x2\x2;<\t\x4\x2\x2"+
		"<\x10\x3\x2\x2\x2=>\av\x2\x2>?\at\x2\x2?@\aw\x2\x2@\x41\ag\x2\x2\x41\x12"+
		"\x3\x2\x2\x2\x42\x43\ah\x2\x2\x43\x44\a\x63\x2\x2\x44\x45\an\x2\x2\x45"+
		"\x46\au\x2\x2\x46G\ag\x2\x2G\x14\x3\x2\x2\x2HJ\x5\x17\f\x2IH\x3\x2\x2"+
		"\x2JK\x3\x2\x2\x2KI\x3\x2\x2\x2KL\x3\x2\x2\x2L`\x3\x2\x2\x2MO\x5\x17\f"+
		"\x2NM\x3\x2\x2\x2OP\x3\x2\x2\x2PN\x3\x2\x2\x2PQ\x3\x2\x2\x2QR\x3\x2\x2"+
		"\x2RV\a\x30\x2\x2SU\x5\x17\f\x2TS\x3\x2\x2\x2UX\x3\x2\x2\x2VT\x3\x2\x2"+
		"\x2VW\x3\x2\x2\x2W`\x3\x2\x2\x2XV\x3\x2\x2\x2Y[\a\x30\x2\x2Z\\\x5\x17"+
		"\f\x2[Z\x3\x2\x2\x2\\]\x3\x2\x2\x2][\x3\x2\x2\x2]^\x3\x2\x2\x2^`\x3\x2"+
		"\x2\x2_I\x3\x2\x2\x2_N\x3\x2\x2\x2_Y\x3\x2\x2\x2`\x16\x3\x2\x2\x2\x61"+
		"\x62\t\x5\x2\x2\x62\x18\x3\x2\x2\x2\x63\x65\n\x6\x2\x2\x64\x63\x3\x2\x2"+
		"\x2\x65\x66\x3\x2\x2\x2\x66\x64\x3\x2\x2\x2\x66g\x3\x2\x2\x2g\x1A\x3\x2"+
		"\x2\x2hl\a$\x2\x2ik\n\a\x2\x2ji\x3\x2\x2\x2kn\x3\x2\x2\x2lm\x3\x2\x2\x2"+
		"lj\x3\x2\x2\x2mo\x3\x2\x2\x2nl\x3\x2\x2\x2op\a$\x2\x2p\x1C\x3\x2\x2\x2"+
		"qs\t\b\x2\x2rq\x3\x2\x2\x2st\x3\x2\x2\x2tr\x3\x2\x2\x2tu\x3\x2\x2\x2u"+
		"v\x3\x2\x2\x2vw\b\xF\x2\x2w\x1E\x3\x2\x2\x2\x10\x2).\x30\x37\x39KPV]_"+
		"\x66lt\x3\b\x2\x2";
	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN.ToCharArray());
}
} // namespace System.CommandLine.Parser
