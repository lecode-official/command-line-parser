//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.5
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from CommandLine.g4 by ANTLR 4.5

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591

namespace System.CommandLine.Parser.Antlr {
using System;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.5")]
[System.CLSCompliant(false)]
public partial class CommandLineLexer : Lexer {
	public const int
		T__0=1, T__1=2, T__2=3, UnixStyleFlaggedIdentifiers=4, WindowsStyleIdentifier=5, 
		UnixStyleIdentifier=6, AssignmentOperator=7, True=8, False=9, Number=10, 
		Digit=11, String=12, QuotedString=13, WhiteSpaces=14;
	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"T__0", "T__1", "T__2", "UnixStyleFlaggedIdentifiers", "WindowsStyleIdentifier", 
		"UnixStyleIdentifier", "AssignmentOperator", "True", "False", "Number", 
		"Digit", "String", "QuotedString", "WhiteSpaces"
	};


	public CommandLineLexer(ICharStream input)
		: base(input)
	{
		Interpreter = new LexerATNSimulator(this,_ATN);
	}

	private static readonly string[] _LiteralNames = {
		null, "'['", "','", "']'", null, null, null, null, "'true'", "'false'"
	};
	private static readonly string[] _SymbolicNames = {
		null, null, null, null, "UnixStyleFlaggedIdentifiers", "WindowsStyleIdentifier", 
		"UnixStyleIdentifier", "AssignmentOperator", "True", "False", "Number", 
		"Digit", "String", "QuotedString", "WhiteSpaces"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "CommandLine.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return _serializedATN; } }

	public static readonly string _serializedATN =
		"\x3\x430\xD6D1\x8206\xAD2D\x4417\xAEF1\x8D80\xAADD\x2\x10\x81\b\x1\x4"+
		"\x2\t\x2\x4\x3\t\x3\x4\x4\t\x4\x4\x5\t\x5\x4\x6\t\x6\x4\a\t\a\x4\b\t\b"+
		"\x4\t\t\t\x4\n\t\n\x4\v\t\v\x4\f\t\f\x4\r\t\r\x4\xE\t\xE\x4\xF\t\xF\x3"+
		"\x2\x3\x2\x3\x3\x3\x3\x3\x4\x3\x4\x3\x5\x3\x5\x6\x5(\n\x5\r\x5\xE\x5)"+
		"\x3\x6\x3\x6\x3\x6\x6\x6/\n\x6\r\x6\xE\x6\x30\x3\a\x3\a\x3\a\x3\a\x3\a"+
		"\x6\a\x38\n\a\r\a\xE\a\x39\x3\b\x3\b\x3\t\x3\t\x3\t\x3\t\x3\t\x3\n\x3"+
		"\n\x3\n\x3\n\x3\n\x3\n\x3\v\x5\vJ\n\v\x3\v\x6\vM\n\v\r\v\xE\vN\x3\v\x5"+
		"\vR\n\v\x3\v\x6\vU\n\v\r\v\xE\vV\x3\v\x3\v\a\v[\n\v\f\v\xE\v^\v\v\x3\v"+
		"\x5\v\x61\n\v\x3\v\x3\v\x6\v\x65\n\v\r\v\xE\v\x66\x5\vi\n\v\x3\f\x3\f"+
		"\x3\r\x6\rn\n\r\r\r\xE\ro\x3\xE\x3\xE\a\xEt\n\xE\f\xE\xE\xEw\v\xE\x3\xE"+
		"\x3\xE\x3\xF\x6\xF|\n\xF\r\xF\xE\xF}\x3\xF\x3\xF\x3u\x2\x10\x3\x3\x5\x4"+
		"\a\x5\t\x6\v\a\r\b\xF\t\x11\n\x13\v\x15\f\x17\r\x19\xE\x1B\xF\x1D\x10"+
		"\x3\x2\t\x4\x2\x43\\\x63|\a\x2//\x32;\x43\\\x61\x61\x63|\x4\x2<<??\x3"+
		"\x2\x32;\v\x2\f\f\xF\xF\"\"$$./\x31\x31<<??]_\x4\x2\f\f\xF\xF\x5\x2\v"+
		"\f\xF\xF\"\"\x8F\x2\x3\x3\x2\x2\x2\x2\x5\x3\x2\x2\x2\x2\a\x3\x2\x2\x2"+
		"\x2\t\x3\x2\x2\x2\x2\v\x3\x2\x2\x2\x2\r\x3\x2\x2\x2\x2\xF\x3\x2\x2\x2"+
		"\x2\x11\x3\x2\x2\x2\x2\x13\x3\x2\x2\x2\x2\x15\x3\x2\x2\x2\x2\x17\x3\x2"+
		"\x2\x2\x2\x19\x3\x2\x2\x2\x2\x1B\x3\x2\x2\x2\x2\x1D\x3\x2\x2\x2\x3\x1F"+
		"\x3\x2\x2\x2\x5!\x3\x2\x2\x2\a#\x3\x2\x2\x2\t%\x3\x2\x2\x2\v+\x3\x2\x2"+
		"\x2\r\x32\x3\x2\x2\x2\xF;\x3\x2\x2\x2\x11=\x3\x2\x2\x2\x13\x42\x3\x2\x2"+
		"\x2\x15h\x3\x2\x2\x2\x17j\x3\x2\x2\x2\x19m\x3\x2\x2\x2\x1Bq\x3\x2\x2\x2"+
		"\x1D{\x3\x2\x2\x2\x1F \a]\x2\x2 \x4\x3\x2\x2\x2!\"\a.\x2\x2\"\x6\x3\x2"+
		"\x2\x2#$\a_\x2\x2$\b\x3\x2\x2\x2%\'\a/\x2\x2&(\t\x2\x2\x2\'&\x3\x2\x2"+
		"\x2()\x3\x2\x2\x2)\'\x3\x2\x2\x2)*\x3\x2\x2\x2*\n\x3\x2\x2\x2+,\a\x31"+
		"\x2\x2,.\t\x2\x2\x2-/\t\x3\x2\x2.-\x3\x2\x2\x2/\x30\x3\x2\x2\x2\x30.\x3"+
		"\x2\x2\x2\x30\x31\x3\x2\x2\x2\x31\f\x3\x2\x2\x2\x32\x33\a/\x2\x2\x33\x34"+
		"\a/\x2\x2\x34\x35\x3\x2\x2\x2\x35\x37\t\x2\x2\x2\x36\x38\t\x3\x2\x2\x37"+
		"\x36\x3\x2\x2\x2\x38\x39\x3\x2\x2\x2\x39\x37\x3\x2\x2\x2\x39:\x3\x2\x2"+
		"\x2:\xE\x3\x2\x2\x2;<\t\x4\x2\x2<\x10\x3\x2\x2\x2=>\av\x2\x2>?\at\x2\x2"+
		"?@\aw\x2\x2@\x41\ag\x2\x2\x41\x12\x3\x2\x2\x2\x42\x43\ah\x2\x2\x43\x44"+
		"\a\x63\x2\x2\x44\x45\an\x2\x2\x45\x46\au\x2\x2\x46G\ag\x2\x2G\x14\x3\x2"+
		"\x2\x2HJ\a/\x2\x2IH\x3\x2\x2\x2IJ\x3\x2\x2\x2JL\x3\x2\x2\x2KM\x5\x17\f"+
		"\x2LK\x3\x2\x2\x2MN\x3\x2\x2\x2NL\x3\x2\x2\x2NO\x3\x2\x2\x2Oi\x3\x2\x2"+
		"\x2PR\a/\x2\x2QP\x3\x2\x2\x2QR\x3\x2\x2\x2RT\x3\x2\x2\x2SU\x5\x17\f\x2"+
		"TS\x3\x2\x2\x2UV\x3\x2\x2\x2VT\x3\x2\x2\x2VW\x3\x2\x2\x2WX\x3\x2\x2\x2"+
		"X\\\a\x30\x2\x2Y[\x5\x17\f\x2ZY\x3\x2\x2\x2[^\x3\x2\x2\x2\\Z\x3\x2\x2"+
		"\x2\\]\x3\x2\x2\x2]i\x3\x2\x2\x2^\\\x3\x2\x2\x2_\x61\a/\x2\x2`_\x3\x2"+
		"\x2\x2`\x61\x3\x2\x2\x2\x61\x62\x3\x2\x2\x2\x62\x64\a\x30\x2\x2\x63\x65"+
		"\x5\x17\f\x2\x64\x63\x3\x2\x2\x2\x65\x66\x3\x2\x2\x2\x66\x64\x3\x2\x2"+
		"\x2\x66g\x3\x2\x2\x2gi\x3\x2\x2\x2hI\x3\x2\x2\x2hQ\x3\x2\x2\x2h`\x3\x2"+
		"\x2\x2i\x16\x3\x2\x2\x2jk\t\x5\x2\x2k\x18\x3\x2\x2\x2ln\n\x6\x2\x2ml\x3"+
		"\x2\x2\x2no\x3\x2\x2\x2om\x3\x2\x2\x2op\x3\x2\x2\x2p\x1A\x3\x2\x2\x2q"+
		"u\a$\x2\x2rt\n\a\x2\x2sr\x3\x2\x2\x2tw\x3\x2\x2\x2uv\x3\x2\x2\x2us\x3"+
		"\x2\x2\x2vx\x3\x2\x2\x2wu\x3\x2\x2\x2xy\a$\x2\x2y\x1C\x3\x2\x2\x2z|\t"+
		"\b\x2\x2{z\x3\x2\x2\x2|}\x3\x2\x2\x2}{\x3\x2\x2\x2}~\x3\x2\x2\x2~\x7F"+
		"\x3\x2\x2\x2\x7F\x80\b\xF\x2\x2\x80\x1E\x3\x2\x2\x2\x13\x2).\x30\x37\x39"+
		"INQV\\`\x66hou}\x3\b\x2\x2";
	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN.ToCharArray());
}
} // namespace System.CommandLine.Parser.Antlr
