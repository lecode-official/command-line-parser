//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.5
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from CommandLine.g4 by ANTLR 4.5

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591

namespace System.CommandLine.Parser.Antlr {
using System;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.5")]
[System.CLSCompliant(false)]
internal partial class CommandLineLexer : Lexer {
	public const int
		T__0=1, T__1=2, T__2=3, UnixStyleAliasIdentifier=4, UnixStyleFlaggedIdentifiers=5, 
		WindowsStyleIdentifier=6, UnixStyleIdentifier=7, AssignmentOperator=8, 
		True=9, False=10, Number=11, Digit=12, String=13, QuotedString=14, WhiteSpaces=15;
	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"T__0", "T__1", "T__2", "UnixStyleAliasIdentifier", "UnixStyleFlaggedIdentifiers", 
		"WindowsStyleIdentifier", "UnixStyleIdentifier", "AssignmentOperator", 
		"True", "False", "Number", "Digit", "String", "QuotedString", "WhiteSpaces"
	};


	public CommandLineLexer(ICharStream input)
		: base(input)
	{
		Interpreter = new LexerATNSimulator(this,_ATN);
	}

	private static readonly string[] _LiteralNames = {
		null, "'['", "','", "']'", null, null, null, null, null, "'true'", "'false'"
	};
	private static readonly string[] _SymbolicNames = {
		null, null, null, null, "UnixStyleAliasIdentifier", "UnixStyleFlaggedIdentifiers", 
		"WindowsStyleIdentifier", "UnixStyleIdentifier", "AssignmentOperator", 
		"True", "False", "Number", "Digit", "String", "QuotedString", "WhiteSpaces"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "CommandLine.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return _serializedATN; } }

	public static readonly string _serializedATN =
		"\x3\x430\xD6D1\x8206\xAD2D\x4417\xAEF1\x8D80\xAADD\x2\x11\x86\b\x1\x4"+
		"\x2\t\x2\x4\x3\t\x3\x4\x4\t\x4\x4\x5\t\x5\x4\x6\t\x6\x4\a\t\a\x4\b\t\b"+
		"\x4\t\t\t\x4\n\t\n\x4\v\t\v\x4\f\t\f\x4\r\t\r\x4\xE\t\xE\x4\xF\t\xF\x4"+
		"\x10\t\x10\x3\x2\x3\x2\x3\x3\x3\x3\x3\x4\x3\x4\x3\x5\x3\x5\x3\x5\x3\x6"+
		"\x3\x6\x6\x6-\n\x6\r\x6\xE\x6.\x3\a\x3\a\x3\a\x6\a\x34\n\a\r\a\xE\a\x35"+
		"\x3\b\x3\b\x3\b\x3\b\x3\b\x6\b=\n\b\r\b\xE\b>\x3\t\x3\t\x3\n\x3\n\x3\n"+
		"\x3\n\x3\n\x3\v\x3\v\x3\v\x3\v\x3\v\x3\v\x3\f\x5\fO\n\f\x3\f\x6\fR\n\f"+
		"\r\f\xE\fS\x3\f\x5\fW\n\f\x3\f\x6\fZ\n\f\r\f\xE\f[\x3\f\x3\f\a\f`\n\f"+
		"\f\f\xE\f\x63\v\f\x3\f\x5\f\x66\n\f\x3\f\x3\f\x6\fj\n\f\r\f\xE\fk\x5\f"+
		"n\n\f\x3\r\x3\r\x3\xE\x6\xEs\n\xE\r\xE\xE\xEt\x3\xF\x3\xF\a\xFy\n\xF\f"+
		"\xF\xE\xF|\v\xF\x3\xF\x3\xF\x3\x10\x6\x10\x81\n\x10\r\x10\xE\x10\x82\x3"+
		"\x10\x3\x10\x3z\x2\x11\x3\x3\x5\x4\a\x5\t\x6\v\a\r\b\xF\t\x11\n\x13\v"+
		"\x15\f\x17\r\x19\xE\x1B\xF\x1D\x10\x1F\x11\x3\x2\t\x4\x2\x43\\\x63|\a"+
		"\x2//\x32;\x43\\\x61\x61\x63|\x4\x2<<??\x3\x2\x32;\v\x2\f\f\xF\xF\"\""+
		"$$./\x31\x31<<??]_\x4\x2\f\f\xF\xF\x5\x2\v\f\xF\xF\"\"\x94\x2\x3\x3\x2"+
		"\x2\x2\x2\x5\x3\x2\x2\x2\x2\a\x3\x2\x2\x2\x2\t\x3\x2\x2\x2\x2\v\x3\x2"+
		"\x2\x2\x2\r\x3\x2\x2\x2\x2\xF\x3\x2\x2\x2\x2\x11\x3\x2\x2\x2\x2\x13\x3"+
		"\x2\x2\x2\x2\x15\x3\x2\x2\x2\x2\x17\x3\x2\x2\x2\x2\x19\x3\x2\x2\x2\x2"+
		"\x1B\x3\x2\x2\x2\x2\x1D\x3\x2\x2\x2\x2\x1F\x3\x2\x2\x2\x3!\x3\x2\x2\x2"+
		"\x5#\x3\x2\x2\x2\a%\x3\x2\x2\x2\t\'\x3\x2\x2\x2\v*\x3\x2\x2\x2\r\x30\x3"+
		"\x2\x2\x2\xF\x37\x3\x2\x2\x2\x11@\x3\x2\x2\x2\x13\x42\x3\x2\x2\x2\x15"+
		"G\x3\x2\x2\x2\x17m\x3\x2\x2\x2\x19o\x3\x2\x2\x2\x1Br\x3\x2\x2\x2\x1Dv"+
		"\x3\x2\x2\x2\x1F\x80\x3\x2\x2\x2!\"\a]\x2\x2\"\x4\x3\x2\x2\x2#$\a.\x2"+
		"\x2$\x6\x3\x2\x2\x2%&\a_\x2\x2&\b\x3\x2\x2\x2\'(\a/\x2\x2()\t\x2\x2\x2"+
		")\n\x3\x2\x2\x2*,\a/\x2\x2+-\t\x2\x2\x2,+\x3\x2\x2\x2-.\x3\x2\x2\x2.,"+
		"\x3\x2\x2\x2./\x3\x2\x2\x2/\f\x3\x2\x2\x2\x30\x31\a\x31\x2\x2\x31\x33"+
		"\t\x2\x2\x2\x32\x34\t\x3\x2\x2\x33\x32\x3\x2\x2\x2\x34\x35\x3\x2\x2\x2"+
		"\x35\x33\x3\x2\x2\x2\x35\x36\x3\x2\x2\x2\x36\xE\x3\x2\x2\x2\x37\x38\a"+
		"/\x2\x2\x38\x39\a/\x2\x2\x39:\x3\x2\x2\x2:<\t\x2\x2\x2;=\t\x3\x2\x2<;"+
		"\x3\x2\x2\x2=>\x3\x2\x2\x2><\x3\x2\x2\x2>?\x3\x2\x2\x2?\x10\x3\x2\x2\x2"+
		"@\x41\t\x4\x2\x2\x41\x12\x3\x2\x2\x2\x42\x43\av\x2\x2\x43\x44\at\x2\x2"+
		"\x44\x45\aw\x2\x2\x45\x46\ag\x2\x2\x46\x14\x3\x2\x2\x2GH\ah\x2\x2HI\a"+
		"\x63\x2\x2IJ\an\x2\x2JK\au\x2\x2KL\ag\x2\x2L\x16\x3\x2\x2\x2MO\a/\x2\x2"+
		"NM\x3\x2\x2\x2NO\x3\x2\x2\x2OQ\x3\x2\x2\x2PR\x5\x19\r\x2QP\x3\x2\x2\x2"+
		"RS\x3\x2\x2\x2SQ\x3\x2\x2\x2ST\x3\x2\x2\x2Tn\x3\x2\x2\x2UW\a/\x2\x2VU"+
		"\x3\x2\x2\x2VW\x3\x2\x2\x2WY\x3\x2\x2\x2XZ\x5\x19\r\x2YX\x3\x2\x2\x2Z"+
		"[\x3\x2\x2\x2[Y\x3\x2\x2\x2[\\\x3\x2\x2\x2\\]\x3\x2\x2\x2]\x61\a\x30\x2"+
		"\x2^`\x5\x19\r\x2_^\x3\x2\x2\x2`\x63\x3\x2\x2\x2\x61_\x3\x2\x2\x2\x61"+
		"\x62\x3\x2\x2\x2\x62n\x3\x2\x2\x2\x63\x61\x3\x2\x2\x2\x64\x66\a/\x2\x2"+
		"\x65\x64\x3\x2\x2\x2\x65\x66\x3\x2\x2\x2\x66g\x3\x2\x2\x2gi\a\x30\x2\x2"+
		"hj\x5\x19\r\x2ih\x3\x2\x2\x2jk\x3\x2\x2\x2ki\x3\x2\x2\x2kl\x3\x2\x2\x2"+
		"ln\x3\x2\x2\x2mN\x3\x2\x2\x2mV\x3\x2\x2\x2m\x65\x3\x2\x2\x2n\x18\x3\x2"+
		"\x2\x2op\t\x5\x2\x2p\x1A\x3\x2\x2\x2qs\n\x6\x2\x2rq\x3\x2\x2\x2st\x3\x2"+
		"\x2\x2tr\x3\x2\x2\x2tu\x3\x2\x2\x2u\x1C\x3\x2\x2\x2vz\a$\x2\x2wy\n\a\x2"+
		"\x2xw\x3\x2\x2\x2y|\x3\x2\x2\x2z{\x3\x2\x2\x2zx\x3\x2\x2\x2{}\x3\x2\x2"+
		"\x2|z\x3\x2\x2\x2}~\a$\x2\x2~\x1E\x3\x2\x2\x2\x7F\x81\t\b\x2\x2\x80\x7F"+
		"\x3\x2\x2\x2\x81\x82\x3\x2\x2\x2\x82\x80\x3\x2\x2\x2\x82\x83\x3\x2\x2"+
		"\x2\x83\x84\x3\x2\x2\x2\x84\x85\b\x10\x2\x2\x85 \x3\x2\x2\x2\x13\x2.\x33"+
		"\x35<>NSV[\x61\x65kmtz\x82\x3\b\x2\x2";
	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN.ToCharArray());
}
} // namespace System.CommandLine.Parser.Antlr
